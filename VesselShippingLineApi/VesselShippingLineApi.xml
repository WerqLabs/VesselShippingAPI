<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VesselShippingLineApi</name>
    </assembly>
    <members>
        <member name="T:VesselShippingLineApi.Controllers.VesselController">
            <summary>
            Vessel Controller Class
            </summary>
        </member>
        <member name="F:VesselShippingLineApi.Controllers.VesselController._IVesselDataManager">
            <summary>
            Create Object for Interface IVesselDataManager
            </summary>
        </member>
        <member name="M:VesselShippingLineApi.Controllers.VesselController.#ctor(VesselShippingLineApi.IDataManagers.IVesselDataManager)">
            <summary>
            Inject IVesselDataManager in _IVesselDataManager
            </summary>
            <param name="vesselDataManager">Interface of VesselDataManager</param>
        </member>
        <member name="M:VesselShippingLineApi.Controllers.VesselController.ShowAllShips">
            <summary>
            List All the ships
            </summary>
            <returns>Shows the list of ship in the database</returns>
        </member>
        <member name="M:VesselShippingLineApi.Controllers.VesselController.AddShip(VesselShippingLineApi.Models.ApiRequest.AddVesselRequestModel)">
             <summary>
             Add the Ship
             </summary>
             <param name="oShipModel"> Json Model with parameters as
             ShipName = Name Of the Ship should be max 100 characters
             Longitude = Coordinate of Ship Logitude should be in double
             Latitude = Coordinate of Ship Latitude should be in double
             Velocity = Velocity of the ship should be in double
            </param>
             <returns>returns Ship Unique Id else return error detail</returns>
        </member>
        <member name="M:VesselShippingLineApi.Controllers.VesselController.UpdateShipVelocity(VesselShippingLineApi.Models.ApiRequest.VelocityRequestModel)">
            <summary>
            Update Ship Velocity
            </summary>
            <param name="oVelocityModel"> Json Model with parameters as
            ShipId = Existing Ship Id datatype int;
            Velocity = Speed of the Ship datatype double
            Latitude = Coordinate of ship Latitude
            Longitude = Coordinate of ship Longitude
            </param>
            <returns>return 204 if success or Error detail</returns>
        </member>
        <member name="M:VesselShippingLineApi.Controllers.VesselController.GetNearestPortForShipDB(System.Int32)">
            <summary>
            Get Nearest Port distance to ship speed and Location from database
            </summary>
            <param name="iShipId">Ship Unique Id</param>
            <returns>Returns  Ports</returns>
        </member>
        <member name="M:VesselShippingLineApi.Controllers.VesselController.GetNearestPortForShip(System.Int32)">
            <summary>
            Get Nearest Port distance to ship speed and Location
            </summary>
            <param name="iShipId">Ship Unique Id</param>
            <returns>Returns List of Ports</returns>
        </member>
        <member name="T:VesselShippingLineApi.ExceptionHandlerMiddleware">
            <summary>
            Handle UnHandled Exception
            </summary>
        </member>
        <member name="M:VesselShippingLineApi.ExceptionHandlerMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Constructor to initiate RequestDelegate
            </summary>
            <param name="next"></param>
        </member>
        <member name="T:VesselShippingLineApi.Extensions.DataManagerServiceCollection">
            <summary>
            Class initialize ShipBAL and VesselDatamanager
            </summary>
        </member>
        <member name="T:VesselShippingLineApi.Filters.ModelValidationActionFilterAttribute">
            <summary>
            Model Validation Action Filter
            </summary>
        </member>
        <member name="M:VesselShippingLineApi.Filters.ModelValidationActionFilterAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Validate if the API Key is correct And If Model State is valid
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:VesselShippingLineApi.Program">
            <summary>
            Start Execution
            </summary>
        </member>
        <member name="T:VesselShippingLineApi.Startup">
            <summary>
            Setup Start Process
            </summary>
        </member>
        <member name="M:VesselShippingLineApi.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor to Inject IConfigration to Configration variable
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:VesselShippingLineApi.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:VesselShippingLineApi.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
